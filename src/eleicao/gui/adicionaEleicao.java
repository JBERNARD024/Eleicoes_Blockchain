/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package eleicao.gui;

import eleicao.core.Eleicao;
import eleicao.utils.Recursos;
import eleicao.utils.SecurityUtils;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.security.KeyPair;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author joaob
 */
public class adicionaEleicao extends javax.swing.JDialog {

    Date now = new Date();
    String nome;
    LocalDate dataInic;
    LocalDate dataFim;
    LocalTime horaInic;
    LocalTime horaFim;
    String pass;
    String confPass;
    String descricao;
    menuInicial menu;
    ImageIcon icon;
    byte[] byteIcon;
    byte[] password;
    File f;

    /**
     * Creates new form menuInfos
     */
    public adicionaEleicao(JDialog parent, File f, menuInicial menu, boolean model) {
        super(parent, model);
        this.f = f;
        this.menu = menu;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        labelNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        labelDataInic = new javax.swing.JLabel();
        labelDataFim = new javax.swing.JLabel();
        dataPickerInic = new com.github.lgooddatepicker.components.DateTimePicker();
        dataPickerFim = new com.github.lgooddatepicker.components.DateTimePicker();
        lblPassword = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescricao = new javax.swing.JTextArea();
        btnFoto = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        btnAdiciona = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtConfPassword = new javax.swing.JPasswordField();
        lblPassword1 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Informações");
        setMinimumSize(new java.awt.Dimension(625, 250));
        setPreferredSize(new java.awt.Dimension(625, 380));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelNome.setText("Nome:");
        labelNome.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        labelNome.setMaximumSize(new java.awt.Dimension(40, 25));
        labelNome.setMinimumSize(new java.awt.Dimension(40, 25));
        labelNome.setPreferredSize(new java.awt.Dimension(40, 20));
        getContentPane().add(labelNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 60, 30));
        getContentPane().add(txtNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 320, 30));

        labelDataInic.setText("Data Início:");
        labelDataInic.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        labelDataInic.setMaximumSize(new java.awt.Dimension(40, 25));
        labelDataInic.setMinimumSize(new java.awt.Dimension(40, 25));
        labelDataInic.setPreferredSize(new java.awt.Dimension(40, 20));
        getContentPane().add(labelDataInic, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 60, 30));

        labelDataFim.setText("Data Fim:");
        labelDataFim.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        labelDataFim.setMaximumSize(new java.awt.Dimension(40, 25));
        labelDataFim.setMinimumSize(new java.awt.Dimension(40, 25));
        labelDataFim.setPreferredSize(new java.awt.Dimension(40, 20));
        getContentPane().add(labelDataFim, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 60, 30));
        getContentPane().add(dataPickerInic, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 320, 30));
        getContentPane().add(dataPickerFim, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 320, 30));

        lblPassword.setText("Confirmar Password:");
        getContentPane().add(lblPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 110, 50));

        txtDescricao.setColumns(20);
        txtDescricao.setRows(5);
        jScrollPane1.setViewportView(txtDescricao);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 270, 320, 50));

        btnFoto.setText("Foto");
        btnFoto.setMinimumSize(new java.awt.Dimension(125, 125));
        btnFoto.setPreferredSize(new java.awt.Dimension(125, 125));
        btnFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFotoActionPerformed(evt);
            }
        });
        getContentPane().add(btnFoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 10, 150, 150));

        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });
        getContentPane().add(btnSair, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 290, -1, 30));

        btnAdiciona.setText("Adicionar");
        btnAdiciona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionaActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdiciona, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 290, -1, 30));

        jLabel3.setText("Descrição:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 60, 50));
        getContentPane().add(txtConfPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 220, 100, 30));

        lblPassword1.setText("Password: ");
        getContentPane().add(lblPassword1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 60, 50));
        getContentPane().add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, 100, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFotoActionPerformed
        JFileChooser escolheFoto = new JFileChooser("../Eleicao_Blockchain_Teste/img/fotosEleicao");
        if (escolheFoto.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            try {
                File fich = escolheFoto.getSelectedFile();
                String caminhoImag = fich.getAbsolutePath();
                icon = new ImageIcon(caminhoImag);
                Image imagem = icon.getImage().getScaledInstance(btnFoto.getWidth(), btnFoto.getHeight(), Image.SCALE_SMOOTH);
                btnFoto.setIcon(new ImageIcon(imagem));
                Recursos.iconToByteArray(icon);
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Ficheiro não Encontrado");
        }
    }//GEN-LAST:event_btnFotoActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        this.dispose();
        new menuInfos(this, menu, true).setVisible(true);
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnAdicionaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionaActionPerformed
        try {
            // TODO add your handling code here:
            adicionarEleicao();
        } catch (Exception ex) {
            Logger.getLogger(adicionaEleicao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAdicionaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdiciona;
    private javax.swing.JButton btnFoto;
    private javax.swing.JButton btnSair;
    private com.github.lgooddatepicker.components.DateTimePicker dataPickerFim;
    private com.github.lgooddatepicker.components.DateTimePicker dataPickerInic;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelDataFim;
    private javax.swing.JLabel labelDataInic;
    private javax.swing.JLabel labelNome;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPassword1;
    private javax.swing.JPasswordField txtConfPassword;
    private javax.swing.JTextArea txtDescricao;
    private javax.swing.JTextField txtNome;
    private javax.swing.JPasswordField txtPassword;
    // End of variables declaration//GEN-END:variables

    private boolean verificaCampo() {
        if (nome.equals("") || dataInic == null || dataFim == null) {
            JOptionPane.showConfirmDialog(null, "Um ou mais campos obrigatórios estão vazios", "Campos Vazios", 2);
            return false;
        } else {
            return true;
        }
    }

    private void adicionarEleicao() throws Exception {
        nome = txtNome.getText().trim();
        dataInic = dataPickerInic.getDatePicker().getDate();
        dataFim = dataPickerFim.getDatePicker().getDate();
        horaInic = dataPickerInic.getTimePicker().getTime();
        horaFim = dataPickerFim.getTimePicker().getTime();
        pass = new String(txtPassword.getPassword()).trim();
        confPass = new String(txtConfPassword.getPassword()).trim();
        descricao = txtDescricao.getText();
        if (icon == null) {
            try {
                String caminhoImag = "..\\Eleicao_BlockChain_Teste\\img\\defaultElection.png";
                icon = new ImageIcon(caminhoImag);
                Image imagem = icon.getImage().getScaledInstance(btnFoto.getWidth(), btnFoto.getHeight(), Image.SCALE_SMOOTH);
                btnFoto.setIcon(new ImageIcon(imagem));
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        try {
            byteIcon = Recursos.iconToByteArray(icon);
        } catch (IOException ex) {
            Logger.getLogger(adicionaEleicao.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (verificaCampo() == true) {
            File pasta = new File("..\\Eleicao_BlockChain_Teste\\eleicao\\" + nome);
            if (!pasta.mkdirs()) {
                pasta.mkdirs();
            }
            KeyPair kp = SecurityUtils.generateRSAKeyPair(2048);
            SecurityUtils.saveKey(kp, "..\\Eleicao_BlockChain_Teste\\eleicao\\" + nome + "\\key");
            password = SecurityUtils.encrypt(pass.getBytes(), kp.getPublic());
            menu.eleicao = new Eleicao(menu.eleitores, menu.candidatos, menu.votos, menu.resultados, dataInic, dataFim, horaInic, horaFim, nome, descricao, byteIcon, password);
            Recursos.writeObject(menu.eleicao, "..\\Eleicao_BlockChain_Teste\\eleicao\\" + nome + "\\info.eleicao");
            this.dispose();
            new menuInfos(this, menu, true).setVisible(true);
        }
    }
}
